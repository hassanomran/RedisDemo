// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RedisDemo.Data;

#nullable disable

namespace RedisDemo.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250203122544_seeddata")]
    partial class seeddata
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RedisDemo.Data.Models.Car.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Make = "Toyota",
                            Model = "Corolla",
                            Year = 2020
                        },
                        new
                        {
                            Id = 2,
                            Make = "Honda",
                            Model = "Civic",
                            Year = 2019
                        },
                        new
                        {
                            Id = 3,
                            Make = "Ford",
                            Model = "Mustang",
                            Year = 2021
                        },
                        new
                        {
                            Id = 4,
                            Make = "Chevrolet",
                            Model = "Camaro",
                            Year = 2022
                        },
                        new
                        {
                            Id = 5,
                            Make = "Tesla",
                            Model = "Model 3",
                            Year = 2023
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
